/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.12.v20180830
 * Generated at: 2024-08-31 00:58:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import uts.isd.model.Device;
import uts.isd.model.Staff;
import uts.isd.model.*;
import uts.isd.model.dao.DBConnector;
import uts.isd.model.dao.DeviceDAO;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.ArrayList;

public final class deviceCatalogue_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("uts.isd.model");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("uts.isd.model.dao.DeviceDAO");
    _jspx_imports_classes.add("uts.isd.model.Staff");
    _jspx_imports_classes.add("uts.isd.model.dao.DBConnector");
    _jspx_imports_classes.add("uts.isd.model.Device");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Device Catalogue</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("    <link href=\"css/styles.css\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        .device-card {\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            margin: 10px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: transform 0.2s;\r\n");
      out.write("        }\r\n");
      out.write("        .device-card:hover {\r\n");
      out.write("            transform: scale(1.05);\r\n");
      out.write("        }\r\n");
      out.write("        .device-card img {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 200px;\r\n");
      out.write("            object-fit: contain;\r\n");
      out.write("        }\r\n");
      out.write("        .device-card a {\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: inherit;\r\n");
      out.write("        }\r\n");
      out.write("        .device-card .buttons {\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .navbar .form-control {\r\n");
      out.write("            width: 600px;\r\n");
      out.write("        }\r\n");
      out.write("        .navbar .btn {\r\n");
      out.write("            width: 100px;\r\n");
      out.write("        }\r\n");
      out.write("        .user-info {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

    Customer customer = (Customer) session.getAttribute("customer");
    ArrayList<String> categories = (ArrayList<String>) session.getAttribute("categories");

      out.write("\r\n");
      out.write("\r\n");
      out.write("    <nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <a href=\"home.jsp\" class=\"navbar-brand\"><h1>IoTBay</h1></a>\r\n");
      out.write("            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbar\">\r\n");
      out.write("                <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("            </button>\r\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"navbar\">\r\n");
      out.write("                <form class=\"d-flex mx-auto\" action=\"SearchDeviceServlet\" method=\"get\">\r\n");
      out.write("                    <div class=\"dropdown\">\r\n");
      out.write("                        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"categoryDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("                            Categories\r\n");
      out.write("                        </button>\r\n");
      out.write("                        <ul class=\"dropdown-menu\" aria-labelledby=\"categoryDropdown\">\r\n");
      out.write("                            ");
 for (String category : categories) { 
      out.write("\r\n");
      out.write("                                <li><a class=\"dropdown-item\" href=\"SearchDeviceServlet?category=");
      out.print( category );
      out.write('"');
      out.write('>');
      out.print( category );
      out.write("</a></li>\r\n");
      out.write("                            ");
 } 
      out.write("\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search for devices\" aria-label=\"Search\" name=\"query\">\r\n");
      out.write("                    <button class=\"btn btn-outline-light\" type=\"submit\">Search</button>\r\n");
      out.write("                </form>\r\n");
      out.write("                <ul class=\"navbar-nav ms-auto\">\r\n");
      out.write("                    ");

                        if (customer != null) {
                    
      out.write("\r\n");
      out.write("                    <div class=\"user-info\">\r\n");
      out.write("                        <span class=\"navbar-text\">");
      out.print( customer.getUserName() );
      out.write("</span>\r\n");
      out.write("                        <button class=\"btn btn-outline-light\" onclick=\"location.href='logout.jsp';\">Logout</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    ");
 } else { 
      out.write("\r\n");
      out.write("                    <li class=\"nav-item\">\r\n");
      out.write("                        <a href=\"login.jsp\" class=\"nav-link\">Login</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li class=\"nav-item\">\r\n");
      out.write("                        <a href=\"register.jsp\" class=\"nav-link\">Register</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container my-3\">\r\n");
      out.write("    <div class=\"d-flex justify-content-between align-items-center\">\r\n");
      out.write("        <h2 class=\"display-6\">Product List</h2>\r\n");
      out.write("        <a href=\"addDevice.jsp\"><button class=\"btn btn-primary btn-add-device\">Add New Device</button></a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        ");

            List<Device> devices = (List<Device>) session.getAttribute("devices");
            if (devices == null) {
                DBConnector dbConnector = new DBConnector();
                Connection conn = dbConnector.openConnection();
                DeviceDAO deviceDAO = new DeviceDAO(conn);
                devices = deviceDAO.listAllDevices();
                conn.close();
            }

            for (Device device : devices) {
        
      out.write("\r\n");
      out.write("        <div class=\"col-md-3\">\r\n");
      out.write("            <a href=\"ViewDeviceServlet?id=");
      out.print( device.getDeviceID() );
      out.write("\">\r\n");
      out.write("                <div class=\"device-card\">\r\n");
      out.write("                    <img src=\"");
      out.print( device.getDeviceImageURL() );
      out.write("\">\r\n");
      out.write("                    <h5>");
      out.print( device.getDeviceName() );
      out.write("</h5>\r\n");
      out.write("                    <p><strong>Brand:</strong> ");
      out.print( device.getDeviceBrand() );
      out.write("</p>\r\n");
      out.write("                    <p><strong>Price:</strong> $");
      out.print( device.getDevicePrice() );
      out.write("</p>\r\n");
      out.write("                    <div class=\"buttons\">\r\n");
      out.write("                        <a href=\"editDevice.jsp?id=");
      out.print( device.getDeviceID() );
      out.write("\" class=\"btn btn-warning btn-sm\">Edit</a>\r\n");
      out.write("                        <a href=\"DeleteDeviceServlet?id=");
      out.print( device.getDeviceID() );
      out.write("\" class=\"btn btn-danger btn-sm\">Delete</a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </a>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");

            }
            session.removeAttribute("devices");
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
